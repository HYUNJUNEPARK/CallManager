
    //https://stackoverflow.com/questions/55612361/telecommanager-action-change-default-dialer-returns-result-canceled-on-huawei-p8
    fun offerReplacingDefaultDialer() {
        //기본 통화앱으로 지정된 앱의 패키지명과 현재앱의 패키지명 비교
        if (getSystemService(TelecomManager::class.java).defaultDialerPackage != packageName) {

            println("packageName: $packageName")
            println("defaultDialerPackage: ${getSystemService(TelecomManager::class.java).defaultDialerPackage}")

//            Intent(TelecomManager.ACTION_CHANGE_DEFAULT_DIALER)
//                .putExtra(TelecomManager.EXTRA_CHANGE_DEFAULT_DIALER_PACKAGE_NAME, packageName)
//            startActivityForResult(intent, 11)

            if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.Q) {
                val rm: RoleManager? = getSystemService(RoleManager::class.java)
                if (rm?.isRoleAvailable(RoleManager.ROLE_DIALER) == true) {
                    @Suppress("DEPRECATION")
                    startActivityForResult(
                        rm?.createRequestRoleIntent(RoleManager.ROLE_DIALER),
                        120
                    )
                }
            }
        }
    }


    fun vvvv(mContext: Context) {
        if (getDefaultSmsPackage(mContext) != null && getDefaultSmsPackage(mContext) != mContext.getPackageName()) {
            var roleManager: RoleManager? = null
            if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.Q) {
                roleManager = mContext.getSystemService(RoleManager::class.java)
                if (roleManager.isRoleAvailable(RoleManager.ROLE_SMS)) {
                    if (roleManager.isRoleHeld(RoleManager.ROLE_SMS)) {
                        Log.d("role", "role")
                    } else {
                        val roleRequestIntent = roleManager.createRequestRoleIntent(
                            RoleManager.ROLE_SMS)
                        (mContext as Activity).startActivityForResult(roleRequestIntent,
                            121)
                    }
                }
            } else {
                val intent = Intent(Sms.Intents.ACTION_CHANGE_DEFAULT)
                intent.putExtra(
                    Sms.Intents.EXTRA_PACKAGE_NAME,
                    mContext.getPackageName()
                )
                (mContext as Activity).startActivityForResult(intent, 121)
            }
        }
    }

    override fun onActivityResult(requestCode: Int, resultCode: Int, data: Intent?) {
        super.onActivityResult(requestCode, resultCode, data)

        if(requestCode==120){
            println("120")
        }

        if(requestCode==121){
            println("121")
        }

        else {
            println("zxcvzxcv")
        }

    }